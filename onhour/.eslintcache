[{"C:\\sizl_onhour\\onhour\\src\\App.js":"1","C:\\sizl_onhour\\onhour\\src\\index.js":"2","C:\\sizl_onhour\\onhour\\src\\components\\Navigation.js":"3","C:\\sizl_onhour\\onhour\\src\\routers\\Course_make.js":"4","C:\\sizl_onhour\\onhour\\src\\routers\\authorization\\Login.js":"5","C:\\sizl_onhour\\onhour\\src\\routers\\authorization\\Landing.js":"6","C:\\sizl_onhour\\onhour\\src\\routers\\Course_manage.js":"7","C:\\sizl_onhour\\onhour\\src\\routers\\authorization\\Register.js":"8","C:\\sizl_onhour\\onhour\\src\\routers\\management.js":"9","C:\\sizl_onhour\\onhour\\src\\routers\\admin\\Edit\\Content_manage.js":"10","C:\\sizl_onhour\\onhour\\src\\components\\SideNavigation.js":"11","C:\\sizl_onhour\\onhour\\src\\routers\\Admin.js":"12","C:\\sizl_onhour\\onhour\\src\\routers\\admin\\Edit\\ContentsList.js":"13","C:\\sizl_onhour\\onhour\\src\\routers\\admin\\Edit\\ContentsLists.js":"14","C:\\sizl_onhour\\onhour\\src\\routers\\admin\\Edit\\Pagination.js":"15","C:\\sizl_onhour\\onhour\\src\\routers\\admin\\Edit\\ContentsNav.js":"16","C:\\sizl_onhour\\onhour\\src\\routers\\admin\\Edit\\Content.js":"17"},{"size":1836,"mtime":1610095848347,"results":"18","hashOfConfig":"19"},{"size":290,"mtime":1609908558512,"results":"20","hashOfConfig":"19"},{"size":1008,"mtime":1610081205361,"results":"21","hashOfConfig":"19"},{"size":119,"mtime":1610083508234,"results":"22","hashOfConfig":"19"},{"size":2886,"mtime":1609994524383,"results":"23","hashOfConfig":"19"},{"size":621,"mtime":1609909649039,"results":"24","hashOfConfig":"19"},{"size":124,"mtime":1609911219519,"results":"25","hashOfConfig":"19"},{"size":638,"mtime":1609909582355,"results":"26","hashOfConfig":"19"},{"size":118,"mtime":1609909881676,"results":"27","hashOfConfig":"19"},{"size":1902,"mtime":1610095374131,"results":"28","hashOfConfig":"19"},{"size":153,"mtime":1609985708553,"results":"29","hashOfConfig":"19"},{"size":163,"mtime":1610032789652,"results":"30","hashOfConfig":"19"},{"size":1813,"mtime":1610109053712,"results":"31","hashOfConfig":"19"},{"size":3285,"mtime":1610110159712,"results":"32","hashOfConfig":"19"},{"size":549,"mtime":1610107812856,"results":"33","hashOfConfig":"19"},{"size":522,"mtime":1610110451128,"results":"34","hashOfConfig":"19"},{"size":443,"mtime":1610107657929,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"px3svi",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\sizl_onhour\\onhour\\src\\App.js",[],["80","81"],"C:\\sizl_onhour\\onhour\\src\\index.js",[],["82","83"],"C:\\sizl_onhour\\onhour\\src\\components\\Navigation.js",["84"],"import { Link } from \"react-router-dom\";\r\nimport \"../assets/css/navigation.css\";\r\nfunction Navigation({ location }) {\r\n  return (\r\n    <section className=\"nav__box\">\r\n      <div className=\"nav__left\">\r\n        <img src=\"https://onehour.co.kr/images/headerLogo.png\" />\r\n        <span>|세명컴퓨터고등학교</span>\r\n      </div>\r\n      <div className=\"nav__center\">\r\n        <ul className=\"center__lists\">\r\n          <li>\r\n            <Link to=\"/admin\">수업보기</Link>\r\n          </li>\r\n\r\n          <li>\r\n            <Link to=\"/course_make\">수업제작</Link>\r\n          </li>\r\n\r\n          <li>\r\n            <Link to=\"/course_manage\">수업관리</Link>\r\n          </li>\r\n\r\n          <li>\r\n            <Link to=\"/management\">학생관리</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"nav__right\">\r\n        <Link to=\"admin/Edit/content_manage\">\r\n          <span>관리자모드</span>\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Navigation;\r\n","C:\\sizl_onhour\\onhour\\src\\routers\\Course_make.js",[],["85","86"],"C:\\sizl_onhour\\onhour\\src\\routers\\authorization\\Login.js",["87"],"import React, { useState } from \"react\";\r\nimport logo from \"../../assets/img/logo.png\";\r\nimport \"../../assets/css/login.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Login({ history }) {\r\n  const [inputs, setInput] = useState({ email: \"\", password: \"\" });\r\n\r\n  const { email, password } = inputs;\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n\r\n    setInput({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // res.data.data.token;\r\n    axios\r\n      .post(\"https://1hour.school/user/login\", { email, password })\r\n      .then((res) => {\r\n        console.log(res);\r\n        const {\r\n          data: {\r\n            data: { token },\r\n          },\r\n        } = res;\r\n        // token을 못받았을때 예외처리\r\n        // token을 받고 받은 token을 sessionStorage에 넣어준다.\r\n        sessionStorage.setItem(\"adminToken\", token);\r\n        history.push(\"/admin\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        throw new Error(error);\r\n      });\r\n\r\n    // 받아온 token값을 session에 저장한다. (내가 관리자로 로그인을 했다는 증거)\r\n    // history를 이용해서 이동\r\n    // **예외처리**\r\n    // 조건 1. 아이디나 비밀번호를 입력하세요\r\n    // 조건 2. 존재하지 않는 아이디입니다.\r\n    // 조건 3. 비밀번호가 틀립니다.\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <div>\r\n        <img src={logo} className=\"Login-img\" prop=\"#\" />\r\n      </div>\r\n      <div className=\"Login__container\">\r\n        <span>시작하기</span>\r\n        <p className=\"container__content\">\r\n          환영합니다! 계정이 없다면 회원가입후 이용해주세요\r\n        </p>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"container__box\">\r\n            <label for=\"box__id\">이메일주소</label>\r\n            <input\r\n              name=\"email\"\r\n              type=\"text\"\r\n              id=\"box__id\"\r\n              onChange={onChange}\r\n              value={email}\r\n            />\r\n          </div>\r\n          <div className=\"container__box\">\r\n            <label for=\"box__pw\">비밀번호</label>\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"box__pw\"\r\n              onChange={onChange}\r\n              value={password}\r\n            />\r\n          </div>\r\n          <div className=\"Login__section\">\r\n            <button type=\"submit\" className=\"Login__btn\">\r\n              로그인\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className=\"container__register\">\r\n          <Link to=\"/authorization/register\">\r\n            <span>가입하기</span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","C:\\sizl_onhour\\onhour\\src\\routers\\authorization\\Landing.js",["88"],"import \"../../assets/css/landing.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../assets/img/logo.png\";\r\n\r\nfunction Landing() {\r\n  return (\r\n    <div className=\"Landing\">\r\n      <div className=\"Landing__section\">\r\n        <Link to=\"/authorization/login\">\r\n          <button className=\"Landing__btn\">시작하기</button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"Landing__container\">\r\n        <img src={logo} className=\"Landing-img\" prop=\"#\" />\r\n        <p className=\"Landing-title\">내가 만드는 한 시간 수업</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n",["89","90"],"C:\\sizl_onhour\\onhour\\src\\routers\\Course_manage.js",[],["91","92"],"C:\\sizl_onhour\\onhour\\src\\routers\\authorization\\Register.js",[],"C:\\sizl_onhour\\onhour\\src\\routers\\management.js",[],"C:\\sizl_onhour\\onhour\\src\\routers\\admin\\Edit\\Content_manage.js",["93"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ContentsLists from \"./ContentsLists\";\r\nimport \"../../../assets/css/contents_manage.css\";\r\n\r\n// 1. 2020-01-07\r\n// lifeCycle : mount : constructor render componentDidmount(1회성)\r\n// update : render , componentDidUpdate\r\n// useEffect : componentDidmount 와 componentDidUpdate역할을 둘다 하는구나\r\n// render가 발생할 때 마다(componentDidMount: 초기, componentDUpdate: 매번) effect가 실행됩니다.\r\n// useEffect(function,[]) ==> fucntion 부분은 ComponentDidmount일때 실행되고 , []안에 값이 있으면 그 값이 update될때마다 function이 작동한다.\r\n// 만약 [] 값이 없으면 어떤 변화가 일어나든지 실행하지 않음 즉 useEffec(function,[]) 는 ComponentDidmount 역할만 한다고 보면됨\r\n\r\n// 2. 2020-01-08\r\n// 처음에 나오고 , 버튼을 클릭하면 업데이트가 되고 그 업데이트 된 값을 가지고 다시 API를 받음\r\n// Life Cycle 이 처음 -> return -> Didmount-> getApi -> setContents -> return\r\n// onClick -> category와 page 바꿔주고 -> return-> Didmount-> getAPI-> setContents -> return\r\n// onClick -> setState 를 통해서 category와 page 바꿔주고 -> return -> Di\r\n\r\n// 3. category의 번호를 확인해보자.\r\n\r\nfunction Content_manage() {\r\n  // data.data.\r\n  const [list, setList] = useState({\r\n    navs: [],\r\n  });\r\n\r\n  const { navs } = list;\r\n\r\n  const getList = async () => {\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(\"https://1hour.school/api/v1/category/list\", {\r\n      headers: {\r\n        Authorization: sessionStorage.getItem(\"adminToken\"),\r\n      },\r\n    });\r\n    console.log(data);\r\n    setList({\r\n      navs: data,\r\n    });\r\n  };\r\n\r\n  useEffect(getList, []);\r\n\r\n  return (\r\n    <div>\r\n      <ContentsLists navs={navs} />\r\n    </div>\r\n  );\r\n}\r\nexport default Content_manage;\r\n","C:\\sizl_onhour\\onhour\\src\\components\\SideNavigation.js",[],["94","95"],"C:\\sizl_onhour\\onhour\\src\\routers\\Admin.js",[],"C:\\sizl_onhour\\onhour\\src\\routers\\admin\\Edit\\ContentsList.js",[],"C:\\sizl_onhour\\onhour\\src\\routers\\admin\\Edit\\ContentsLists.js",["96","97","98"],"C:\\sizl_onhour\\onhour\\src\\routers\\admin\\Edit\\Pagination.js",[],"C:\\sizl_onhour\\onhour\\src\\routers\\admin\\Edit\\ContentsNav.js",[],"C:\\sizl_onhour\\onhour\\src\\routers\\admin\\Edit\\Content.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":7,"column":9,"nodeType":"107","endLine":7,"endColumn":66},{"ruleId":"99","replacedBy":"108"},{"ruleId":"101","replacedBy":"109"},{"ruleId":"105","severity":1,"message":"106","line":55,"column":9,"nodeType":"107","endLine":55,"endColumn":58},{"ruleId":"105","severity":1,"message":"106","line":14,"column":9,"nodeType":"107","endLine":14,"endColumn":60},{"ruleId":"99","replacedBy":"110"},{"ruleId":"101","replacedBy":"111"},{"ruleId":"99","replacedBy":"112"},{"ruleId":"101","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":30,"column":19,"nodeType":"116","endLine":42,"endColumn":4},{"ruleId":"99","replacedBy":"117"},{"ruleId":"101","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":3,"column":17,"nodeType":"121","messageId":"122","endLine":3,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":49,"column":18,"nodeType":"116","endLine":72,"endColumn":4},{"ruleId":"114","severity":1,"message":"123","line":74,"column":21,"nodeType":"124","endLine":74,"endColumn":37,"suggestions":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["126"],["127"],["126"],["127"],["126"],["127"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["126"],["127"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'contents'. Either include it or remove the dependency array. You can also do a functional update 'setContents(c => ...)' if you only need 'contents' in the 'setContents' call.","ArrayExpression",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},"Update the dependencies array to be: [page, category, contents]",{"range":"131","text":"132"},[2287,2303],"[page, category, contents]"]